Id,VideoId,Title,Description,PublishedAt,Duration,ViewCount,LikeCount,CommentCount,PrivacyStatus,EmbeddingStatus,EngagementRate,
22,NN1mCK6GA4o,Single Responsibility Prensibi: Tek Sorumluluk Prensibi,"Bu video, Youngling üyelerimiz için özel olarak hazırlandı! 🚀 'Single Responsibility' (Tek Sorumluluk) prensibini derinlemesine inceliyoruz. Yazılım geliştirme sürecinde karşılaşılan karmaşık senaryoları ve bu prensibin neden önemli olduğunu örneklerle açıklıyoruz. Kodu temiz, sürdürülebilir ve kolay test edilebilir hale getirmek için nasıl kullanmanız gerektiğini öğrenin!

Videomuzda, bu prensibin nasıl bozulabileceğini ve doğru uygulama yöntemlerini adım adım keşfedeceksiniz. 'Single Responsibility' prensibini tam anlamıyla özümseyerek, yazılım projelerinizde sağlam bir temel oluşturabilirsiniz.

Discord sunucumuza katılarak sorularınızı paylaşabilir ve topluluğumuzla etkileşime geçebilirsiniz:
https://discord.com/invite/tkZBnuba8h",2024-09-03 12:00,00:20:56,117,6,3,public,Enabled,7.69,
35,6lf1yeFDupA,C# Asenkron ve Senkron Programlama Nedir?,Senkron programlama, işlemlerin sırayla ve adım adım gerçekleştiği bir programlama yaklaşımıdır. Yani, bir işlem tamamlanmadan diğeri başlamaz. Asenkron programlama, işlemlerin eş zamanlı olarak gerçekleşebildiği bir programlama yaklaşımıdır. Bu, bir işlemin tamamlanmasını beklemeden diğer işlemlerin devam edebileceği anlamına gelir.,2023-12-17 15:16,00:01:00,690,37,5,public,Enabled,6.9,
3,y1j1xIVYq6I,Copilot ile Rol Tabanlı Oyun Geliştirme | Uzay Savaşı Serisi #1,"Bu bölümde, daha önceki projelerimizde de ipuçlarını verdiğimiz metin tabanlı oyun fikrimizi hayata geçiriyoruz. World of Warcraft’tan ilham alarak daha önce küçük konsol oyunları yapmıştık, şimdi ise bunu bir adım öteye taşıyoruz.
Bilim kurgu, fantastik kurgu ve cyberpunk öğeleriyle harmanlanmış bu projede, yapay zekayı bir yardımcı değil, adeta bir rol arkadaşı olarak konumlandırıyoruz.

Kodlama süreci içinde bir roleplay deneyimi yaratıyoruz.
İzleyiciye sadece kod değil, aynı zamanda bir karakterin gözünden senaryoya katılma imkânı sunuyoruz.

🪐 Senaryomuzun temeli ise bir Galaktik İmparatorluk ve ona karşı gelen asiler etrafında şekilleniyor. Disiplinli ama kötü olmayan bu imparatorluğun düzenine karşı çıkanlar artık harekete geçiyor…

🎯 Bu proje ile amacımız yalnızca oyun yazmak değil, yazılım öğretimini daha eğlenceli ve sürükleyici hale getirmek.

🛸 Devam bölümleri çok yakında! Abone olmayı ve bildirimleri açmayı unutmayın.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-04-19 09:01,00:05:17,713,24,9,public,Enabled,4.63,
4,HqjNJjSKXEo,Copilot ile 10 Dakikada Sayı Tahmin Oyunu Yap,"Copilot serimize kaldığımız yerden devam ediyoruz.
Bu videoda, GitHub Copilot'u kullanarak sadece 10 dakikada C# ile bir Sayı Tahmin Oyunu geliştiriyoruz.

Geçen videoda Copilot’u kurduk, tanıdık…
Şimdi sıra geldi onu çalıştırmaya!

Bu mini proje sayesinde:
✅ Copilot’un kod önerilerini gerçek zamanlı nasıl kullandığımızı,
✅ Küçük projelerde ne kadar pratik katkı sağladığını,
✅ Ve C# ile temel bir oyun yapmanın ne kadar kolaylaştığını göreceksiniz.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-03-26 14:00,00:12:39,240,15,0,public,Enabled,6.25,
10,lCAkAu97ok4,Bölüm 6: Onion Mimari Dependency Injection ve Persistence Katmanı Entegrasyonu | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Bu derste Onion Mimarinin temel prensiplerini uygulayarak, Dependency Injection ve Persistence Katmanı Entegrasyonu süreçlerini derinlemesine inceliyoruz.

Gevşek Bağlılık (Loosely Coupled): Interface ve sınıf bağımlılıklarını optimize ederek sürdürülebilir bir yapı nasıl oluşturulur?
Context ve Repository Yönetimi: Repository'leri IOC container ile entegre etme adımları.
Pratik Örnekler: Entity Framework kullanımı ve veritabanı bağlantılarının yapılandırılması.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-01-11 11:00,00:30:23,414,29,0,public,Enabled,7.0,
28,VAoJ-JnXS1I,JWT Nedir? Ve .Net Core’da Nasıl Oluşturulur?,,2024-03-23 11:22,00:00:48,700,40,0,public,Enabled,5.71,
47,RtyGbFKLWMY,1 - .NET ile Eticaret Projesi (Ntier) - Başlangıç Rehberi,"Bu eğitim videosunda, .NET platformunda C# programlama dilini kullanarak Ntier mimarisiyle eticaret projesi geliştirmeye başlıyoruz. E-ticaret dünyasına adım atmak ve sağlam bir temel oluşturmak için bu serinin ilk adımını atıyoruz! 

Bu video, .NET teknolojisi ve Ntier mimarisi hakkında bilgi sahibi olmak isteyen herkes için mükemmel bir başlangıç ​​rehberi olacak. Proje geliştirmeye başlamadan önce temel kavramları anlamak, projenin başarıya ulaşmasının temel taşıdır. Eğitim videomuzda adım adım rehberlik edeceğiz ve izleyicilere kendi eticaret projelerini geliştirmeleri için güçlü bir temel sağlayacağız. Başarılar dileriz ve eğitim videomuzu keyifle izlemenizi umarız!

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-08-06 16:00,00:04:01,2930,44,3,public,Enabled,1.60,
12,A9_rpsi2KHc,Bölüm 4: Onion Mimari DTO ve Katmanlar Arası Soyutlama | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Onion Mimari serimizin dördüncü bölümüne hoş geldiniz! Bu videoda, persistence katmanına geçişi adım adım ele alıyoruz. Ayrıca, katmanlar arası soyutlama prensiplerini detaylandırarak DTO (Data Transfer Object) mantığının doğru kullanımını örneklerle açıklıyoruz.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2024-12-28 15:10,00:24:47,609,22,12,public,Enabled,5.58,
52,jKuXOYaJp-Y,6- .Net Core ile CRUD,"Merhaba arkadaşlar,

Bu videoda sizlerle .Net Core CRUD (Create, Read, Update, Delete) işlemlerini nasıl gerçekleştirebileceğimizi göstereceğim. .Net Core CRUD, temel veritabanı işlemlerini ifade eder ve bu işlemler bir web uygulaması oluştururken en sık kullanılan işlemler arasındadır.

.Net Core CRUD öğrenmek, birçok farklı senaryoda kullanılabilir. Bu tür bir uygulama geliştirmek, bir şirketin müşteri verilerini kaydederken, bir e-ticaret sitesindeki ürün verilerini yönetirken veya bir blog sitesindeki yazıları düzenlerken kullanılabilir.

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-05-12 19:13,00:19:20,784,25,9,public,Enabled,4.34,
13,_9FiqFQrw4A,Bölüm 3: Onion Mimari Contract Katmanından Somut Sınıflara Geçiş | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Onion Mimari serimizin bu bölümünde, Contract Katmanı üzerinde yoğunlaşıyoruz. Contract katmanının tasarımında dikkat edilmesi gereken noktaları ele alıyor ve bu katmandan somut sınıflara nasıl geçileceğini adım adım inceliyoruz. Yazılım projelerinde esneklik ve sürdürülebilirlik sağlamak için katmanlar arasında güçlü bir soyutlama mekanizması kurmayı öğrenin.

Bu videoda, DTO'lar, servis sözleşmeleri (service contracts) ve diğer önemli unsurların tasarımına dair detaylı bir rehber sunuyoruz. Ayrıca, Contract katmanının Domain ve Application katmanlarıyla olan ilişkisini anlamanızı sağlayacak pratik örneklerle konuyu pekiştiriyoruz.

Sorularınızı yorumlara yazmayı unutmayın! 🌟",2024-12-21 11:00,00:14:30,371,22,6,public,Enabled,7.55,
64,zFiBFcCtEhc,C# Katmanlı Mimari (Ntier) Nedir? #csharp #programming #programlama #yazılım #code,,2023-01-21 17:34,00:01:00,443,29,0,public,Enabled,6.55,
66,vVE9cW7QWTw,Entity Framework Code First Nedir? #csharp #entityframework #veritabanı #yazılım,,2023-01-19 15:25,00:01:01,203,15,0,public,Enabled,7.39,
14,evRBFPShuJA,Bölüm 2: Onion Mimari Proje Oluşturma ve Uygulamalı Tasarım | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Onion Mimari'nin temelini anlamanın ardından bu bölümde, gerçek bir proje oluşturarak uygulamalı tasarım sürecine giriş yapıyoruz. Yazılım projelerinizi modern prensiplere uygun bir şekilde geliştirmek için ihtiyacınız olan adımları detaylı bir şekilde ele alıyoruz.

📌 Videonun Bölümleri:

00:31 Giriş
01:15 Klasörler
05:29 Domain
08:00 Application
10:10 Persistence
12:14 Inner Infrastructure
13:26 Presentation (API)
17:20 Entities
20:00 Prefer Auto Properties
21:06 Concretes
23:20 AspNetCore.Identity.EntityFrameworkCore
24:01 AppUser
26:10 Category
26:34 Product
27:44 AppUserProfile
28:38 Order
29:06 OrderDetail
30:54 Scope to This


Sorularınızı yorumlara yazmayı unutmayın. 🌟",2024-12-14 09:00,00:31:34,942,40,10,public,Enabled,5.31,
16,W4PKZypQ3P8,CQRS Pattern Nedir? - Okuma ve Yazma İşlemlerinin Ayrımı,Sevgili arkadaşlar, bu videoda CQRS Pattern’in ne olduğunu ve yazılım projelerinde neden kullanıldığını anlattık. CQRS, okuma (query) ve yazma (command) işlemlerini sorumluluk açısından ayıran bir tasarım kalıbıdır. Özellikle veri tabanında yapılan sorgu ve güncelleme işlemlerinin ayrıştırılması, sistem performansını artırır. Video boyunca, basit bir ürün ve kategori listesini sorgulayıp nasıl ayrıştırabileceğinizi örneklerle gösterdik. Bir sonraki videoda CQRS'in daha karmaşık uygulamalardaki kullanımını detaylandıracağız.,2024-10-23 12:00,00:31:40,84,5,0,public,Enabled,5.95,
80,UGPbj_xwEfs,Bilgisayarların da bir zihni vardır.Bu zihin aslında RAM.Bu yüzden nesneleri RAM üzerinde tanımlarız,,2022-11-22 22:33,00:00:46,327,24,0,public,Enabled,7.34,
88,QHnHyRIo9Jo,OOP Ders 2-Encapsulation Nedir? Nasıl Uygulanır?,"Sevgili arkadaşlar bir önceki derste oluşturduğumuz projemizde nesne yönelimli programlama (oop)'nın genel felsefesinden bahsetmiştik ve devamında bir sınıf (class) oluşturarak içerisinde bir takım özellikler (properties) tanımlamıştık. Bu dersimizde ise oop'nin prensiplerinden biri olan kapsülleme (encapsulation) konusunu işleyeceğiz. 

*proje:* https://github.com/softbreak/OOP/tree/main/2-Encapsulation/ConsoleRPG_0

-----------------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-10-07 17:00,00:47:00,1796,64,10,public,Enabled,4.12,
2,zaT9FJy37TI,Copilot ile Uzay Gemisi Kodluyoruz | Uzay Savaşı Serisi #2,"Bu bölümde, artık teknik altyapıya geçiyoruz ve kahramanımızın uzay gemisini C# ile kodlamaya başlıyoruz.

🚀 Neler yapıyoruz?
- Uzay gemisi sınıfı (Starship) oluşturuluyor.
- Zırh sistemi (MaxHull, CurrentHull) tasarlanıyor.
- Copilot ile senaryo odaklı kod önerileri alınıyor.
- Oyunun mantığı yazı ile kod arasında kuruluyor.

💬 Bu sadece bir oyun değil, bu, kodla yazılmış bir senaryo motoru.
Bu bölümde izleyici olarak yalnızca kodu değil, o kodun anlattığı hikâyeyi de göreceksiniz.

📌 Serinin devamı çok yakında.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-04-25 12:02,00:21:38,188,15,9,public,Enabled,12.77,
5,pz6tF1IXykE,Copilot'u Sıfırdan Öğrenin: En İnce Detayına Kadar Açıklıyoruz!,"Arkadaşlar selam! Bu videoda sizlere GitHub Copilot'u baştan sona anlatıyoruz. Sıfırdan kurulumdan başlayıp, Visual Studio ile nasıl entegre çalışacağınıza ve C# projelerinizde nasıl kullanabileceğinize kadar her şeyi tek tek göreceksiniz.

Uzun zamandır beklediğiniz bu seriye başlıyoruz ve emin olun bu videodan sonra Copilot'u kullanmayan kalmayacak!

00:00 - Giriş ve Copilot Nedir?
04:22 - Copilot'u Nasıl Entegre Edersiniz?
12:36 - C# Projelerinde Copilot ile Kodlama
15:20 - Yapay Zeka Destekli Kod Tamamlama ve Hata Düzeltme
20:10 - Copilot'un Sunduğu Verimlilik İpuçları
25:00 - Sık Sorulan Sorular ve İpuçları

Video'da kullanılan linkler:

🔗 Visual Studio GitHub Copilot: https://visualstudio.microsoft.com/github-copilot/
🔗 GitHub: https://github.com/
🔗 Visual Studio ve Copilot Kurulum Kılavuzu: https://learn.microsoft.com/en-us/visualstudio/ide/visual-studio-github-copilot-install-and-states?view=vs-2022


🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-03-10 15:01,00:30:57,2184,94,14,public,Enabled,4.95,
1,kVIV6od23SU,Copilot ile Savaş Mekaniğini Test Ediyoruz | Uzay Savaşı Serisi #3,"Bu videoda, önceki bölümlerde oluşturduğumuz uzay gemisi sistemine basit ama işlevsel bir savaş döngüsü ekliyoruz.
Copilot’tan yardım alarak gemiler arası saldırı, hedefleme ve savunma mekaniklerini adım adım test ediyoruz.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-05-06 11:01,00:20:54,54,1,1,public,Enabled,3.70,
6,8nUQu-ZyRz8,Bölüm 8: Onion Mimari Api Test İşlemleri,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Bu bölümde, Onion Architecture'ın Inner Infrastructure katmanında yaptığımız düzenlemeleri gözden geçiriyoruz. Daha önce tanımladığımız mimari yapıyı test etmek için UI katmanında bir Web API projesi üzerinden çalışmalarımıza devam ediyoruz.

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-02-15 09:00,00:25:53,350,13,2,public,Enabled,4.29,
7,Hy0QTkjDvII,Mediator Pattern Kullanımı,"Sevgili Youngling üyelerimiz, bu videomuzda, yazılım projelerinde bağımlılıkları yönetmenin en etkili yollarından biri olan Mediator Design Pattern’i ele alıyoruz. Bu bölümde, MediatR kütüphanesinin nasıl çalıştığını, CQRS ile nasıl entegre edilebileceğini ve bağımlılıkları nasıl minimize edebileceğinizi gerçek proje örnekleri üzerinden detaylandırıyoruz. Daha modüler, okunabilir ve ölçeklenebilir bir mimari oluşturmak için bu teknikleri keşfetmeye hazır olun!

Önceki bölümlerde CQRS’in temel yapısını ve kullanımı öğrendik, şimdi ise bağımlılıkları daha iyi yöneterek projelerinizi bir üst seviyeye taşıyoruz. Hadi başlayalım!",2025-01-31 21:42,00:13:40,48,3,0,public,Enabled,6.25,
8,JUhOndhT3Xc,CQRS Pattern Kullanımı,"Sevgili Youngling üyelerimiz, CQRS Pattern serimizin bu devam videosunda, commands (komutlar), queries (sorgular) ve handlers (işleyiciler) kavramlarını derinlemesine inceliyoruz. Daha önce CQRS’in temel prensiplerini öğrenmiştiniz, bu kez kategori oluşturma, güncelleme ve silme işlemleri üzerinden pratik uygulamalara odaklanıyoruz. Videoda, sistem performansınızı artırmak ve projelerinizi daha ölçeklenebilir hale getirmek için bu tekniklerin nasıl kullanılacağını adım adım keşfedeceksiniz.",2025-01-22 11:00,00:18:42,71,4,2,public,Enabled,8.45,
11,0073rF3RrKk,Bölüm 5: Onion Mimari Persistence Katmanı ve Repository Yapıları  | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Onion Mimari eğitim serimizin bu özel videosunda, persistence katmanına geçiş yaparak repository yapılarının nasıl oluşturulduğunu detaylı şekilde ele alıyoruz. Ayrıca, dependency injection, async metodların kullanımı ve CompositeKey tasarımı gibi önemli konuları uygulamalı olarak anlatıyoruz. Gelişmiş yazılım mimarisi tekniklerini öğrenmek isteyenler için bu video rehber niteliğinde! Sorularınızı yorumlarda bizimle paylaşmayı unutmayın. İyi seyirler!

🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-01-06 11:00,00:29:06,401,23,0,public,Enabled,5.74,
17,Vli___1DEMY,Dependency Inversion: Bağımlılığın Tersine Çevrilmesi,"SOLID serimizin son videosuna geldik ve Dependency Inversion prensibini inceliyoruz. Bu önemli prensip, yazılım projelerinizde alt ve üst seviye modüller arasındaki sıkı sıkıya bağımlılığı gevşeterek, kodunuzu daha esnek ve sürdürülebilir hale getirmenizi sağlar.

Videomuzda, Robert C. Martin'in bu prensibi nasıl tanımladığını, sıkı bağlılık (tightly coupled) ve gevşek bağlılık (loosely coupled) kavramlarının projelerinize nasıl etkide bulunduğunu öğreniyoruz. Ayrıca, pratik örneklerle Dependency Inversion'ı gerçek dünya projelerinde nasıl uygulayabileceğinizi gösteriyoruz.

Bu video, yalnızca *Youngling* üyelerimize özel olarak yayınlanmıştır. Yazılım becerilerinizi geliştirmek ve profesyonel dünyada fark yaratmak için bu videoyu kaçırmayın!

Topluluğumuzla etkileşime geçmek ve güncel içeriklerden haberdar olmak için Discord sunucumuza katılın:
https://discord.com/invite/tkZBnuba8h",2024-09-30 12:00,00:21:44,114,2,2,public,Enabled,3.51,
15,97vwRWysViE,Bölüm 1:Onion Mimari Nedir? Katmanlı Yazılım Yapıları | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Onion Mimari ile yazılım projelerinizde sürdürülebilirlik ve esneklik nasıl sağlanır? Bu videoda, yazılım mimarilerinde yeni bir perspektif sunan Onion Mimari'nin temel prensiplerini ele alıyoruz. Domain Driven Design yaklaşımını anlamak, katmanlı yapıları doğru bir şekilde kullanmak ve projelerinizi değişime dayanıklı hale getirmek için gerekli teorik temelleri keşfedin.
Onion Mimari'nin Ntire Mimari ile farklarını öğrenerek projelerinizi nasıl daha verimli ve esnek hale getirebileceğinizi öğreneceksiniz.

📌 Videonun Bölümleri:

00:06 Onion Mimari Tanımı
00:43 Onion ve Ntire Mimari Karşılaştırması
03:22 Yazılımda Sürdürülebilirlik ve Esneklik
14:40 Domain Driven Design (DDD) Açıklaması

Sorularınızı yorumlara yazmayı unutmayın!🌟",2024-12-06 12:00,00:23:43,1038,54,5,public,Enabled,5.68,
18,5qNmRMvo7yI,Interface Segregation: Arayüz Ayrımı Prensibi,"SOLID serimizin bu videosunda, Interface Segregation prensibini ayrıntılarıyla ele alıyoruz. Interface Segregation, büyük ve şişkin interface'leri daha küçük ve odaklı hale getirerek kodunuzu daha modüler ve sürdürülebilir yapmanıza yardımcı olur.

Videoda, SOLID'in diğer prensipleriyle olan bağlantıları, özellikle Single Responsibility ve Open-Closed prensiplerine nasıl etkide bulunduğunu keşfedeceksiniz. Ayrıca, Robert C. Martin'in gerçek hayatta karşılaştığı bir sorundan ilham alarak geliştirdiği bu prensibi, printer modelleri ve gerçek dünya örnekleri üzerinden daha somut hale getiriyoruz.

Interface Segregation sayesinde projelerinize eklenen yeni özellikler, mevcut yapıyı bozmadan kolayca entegre edilebilecek. Videoda, bu prensibin yazılım mimarisine nasıl katkı sağladığını ve neden önemli olduğunu detaylı örneklerle öğreneceksiniz.

Discord sunucumuza katılarak sorularınızı paylaşabilir ve topluluğumuzla etkileşime geçebilirsiniz:
https://discord.com/invite/tkZBnuba8h",2024-09-23 12:00,00:18:41,47,0,0,public,Enabled,0.0,
19,W5pL7yl_bNg,Liskov's Substitution Prensibi: Liskov'un Yer Değiştirme Prensibi,"Bu videoda, SOLID prensiplerinden 'Liskov Substitution' (Yerine Geçme) prensibini detaylarıyla inceliyoruz. Yazılım dünyasında doğru inheritance kullanımı ve olası hatalardan kaçınmanın yollarını öğrenmek için Liskov Substitution'ı derinlemesine keşfedeceğiz.

Prensibin temelini anlamak, yazılım projelerinizde daha esnek ve sürdürülebilir bir yapı oluşturmanıza yardımcı olacaktır. Video boyunca, gerçek dünyadan örnekler ve pratik uygulamalarla bu prensibin nasıl kullanıldığını göreceksiniz. 

Discord sunucumuza katılarak sorularınızı paylaşabilir ve topluluğumuzla etkileşime geçebilirsiniz:
https://discord.com/invite/tkZBnuba8h",2024-09-16 12:00,00:35:35,146,9,0,public,Enabled,6.16,
20,clLSk2L394I,Open Closed Prensibi: Açık/Kapalı Prensibi,"Bu bölümde, SOLID prensiplerinden 'Open-Closed' (Açık-Kapalı) prensibini detaylarıyla ele alıyoruz. Projelerinizi geliştirirken mevcut yapıyı bozmadan nasıl yeni özellikler ekleyebileceğinizi ve kodunuzu nasıl esnek tutabileceğinizi öğreneceksiniz.

Open-Closed prensibini doğru anlamak ve uygulamak, yazılım geliştirme sürecinde sizi bir adım öne taşıyacak. Videomuzda, bu prensibin neden önemli olduğunu, nasıl uygulanması gerektiğini ve yanlış uygulandığında hangi dezavantajlarla karşılaşabileceğinizi örneklerle açıklıyoruz.

Discord sunucumuza katılarak sorularınızı paylaşabilir ve topluluğumuzla etkileşime geçebilirsiniz:
https://discord.com/invite/tkZBnuba8h",2024-09-09 12:00,00:32:38,239,13,0,public,Enabled,5.44,
23,71236j6yu8M,Authentication ve Authorization:Rol Bazlı Oturum,"Bu videomuzda, kimlik doğrulama (Authentication) ve yetkilendirme (Authorization) süreçlerini ele alıyoruz. Bir önceki dersimizde teorik olarak bahsettiğimiz bu kavramları şimdi pratiğe dökerek, admin panelinde kullanıcı ekleme ve rol atama işlemlerini adım adım gösteriyoruz. Refaktörleme adımlarımızı da içeren bu kapsamlı dersimizle, projelerinizde güvenli ve etkili kullanıcı yönetimi sağlayabileceksiniz.

Siz de sorularınızı sormak isterseniz, abonelerimize özel Discord sunucumuza katılmayı unutmayın. 
https://discord.com/invite/tkZBnuba8h",2024-08-16 09:00,01:23:57,106,5,1,public,Enabled,5.66,
32,xCagCl0v1ts,ASP.NET Core'da middleware, HTTP taleplerini işlemek ve yanıtlamak için kullanılan bir kavramdır.,,2024-03-08 18:23,00:01:01,393,18,2,public,Enabled,5.9,
21,dXqMXsDrqT8,SOLID Prensiplerine Giriş,"Bu videoda, yazılım dünyasının temel taşlarından biri olan SOLID prensiplerine kapsamlı bir giriş yapıyoruz. İlk bölümümüzde, 'Single Responsibility' (Tek Sorumluluk) prensibini ele alarak, Object Oriented Programming (OOP) felsefesiyle nasıl uyumlu bir şekilde kullanılacağını öğreniyoruz.

Bu serinin devamında, SOLID prensiplerinin her birini derinlemesine inceleyeceğiz. Ancak, bu videonun ardından yalnızca *Youngling* üyelerimiz için hazırlanan özel içeriklere erişebileceksiniz! Yazılım dünyasında uzmanlaşmak ve projelerinizde daha sağlam yapılar oluşturmak için bu fırsatı kaçırmayın.


*Youngling* seviyesine geçerek (Katıl), bu ayrıcalıklı içeriklere ve topluluğumuzun özel etkinliklerine katılma hakkı elde edebilirsiniz!

Ayrıca, Discord sunucumuza katılarak topluluğumuzla etkileşimde bulunabilir, sorularınızı paylaşabilir ve güncel içeriklerden haberdar olabilirsiniz: 
https://discord.com/invite/tkZBnuba8h

Bu video, yazılım yolculuğunuzda bir sonraki adıma geçmek için harika bir başlangıç!",2024-09-03 12:00,00:13:53,519,28,4,public,Enabled,6.17,
24,8wEkVRtBmjs,Yazılım Kariyerine Başlangıç: İpuçları ve Tavsiyeler,"Bu videoda, yazılım dünyasına adım atmayı düşünenler ve kariyerine yeni başlayanlar için çok değerli ipuçları ve tavsiyeler sunuyoruz.Yazılım dünyasında iş arayışında nelere dikkat etmeli, hangi becerilere sahip olmalı ve iş görüşmelerinde nasıl öne çıkmalıyız gibi konuları samimi bir sohbet eşliğinde detaylı bir şekilde ele alıyoruz.

Ayrıca, tecrübesiz yazılımcıların karşılaştığı zorluklar ve bu zorlukları aşmak için uygulanabilecek stratejiler hakkında da konuşuyoruz. Hem eğitici hem de keyifli bir sohbet oldu!

Siz de sorularınızı sormak isterseniz, abonelerimize özel Discord sunucumuza katılmayı unutmayın. 
https://discord.com/invite/tkZBnuba8h

Abone olmayı unutmayın!",2024-05-31 07:00,00:22:25,741,36,11,public,Enabled,6.34,
25,0KGOze3B14Y,Hangi Programlama Dili?,"Yeni başlayanlar için yazılıma adım atmak gerçekten karmaşık bir seçenek yumağı olabilir. Hangi dilin seçilmesi gerektiği konusunda net bir fikir oluşturmak önemlidir. 
Bu videoda, yazılıma sıfırdan başlayacak olanlara hangi dilin en uygun olduğunu belirlemelerine yardımcı olacağız. Python, C#, C++ gibi popüler diller arasında bir seçim yaparken nelere dikkat etmek gerektiğini detaylıca ele alacağız. Ayrıca, yüksek seviye ve düşük seviye diller arasındaki farklar ve hangi dilin hangi kariyer hedeflerine daha uygun olduğunu göz önünde bulundurmak önemlidir. Algoritma geliştirme sürecinin ve bu sürecin yazılım projelerindeki öneminin altını çizeceğiz. İzleyicilere sabır, disiplin ve sürekli öğrenme üzerine tavsiyeler sunarak, yazılım dünyasına ilk adımlarını atmaya cesaret edenlere rehberlik edeceğiz. Unutmayın, yazılım dünyasına adım atmak için asla geç değildir!

Yazılım dünyasına dair merak ettiğiniz her şeyi bizimle paylaşabilirsiniz! Eğer sizin de aklınıza takılan sorular varsa, video altına yorum olarak yazmayı unutmayın. 

Bir sonraki videoda, daha fazla bilgi ve keyifli içeriklerle tekrar görüşmek üzere!

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-05-16 09:00,00:26:31,742,35,5,public,Enabled,5.39,
26,5oxLlsQfSAM,Yazılım Dünyasına Giriş: Soru Cevap Oturumu,"Merhaba arkadaşlar! Bu sefer soru cevap formatında karşınızdayız! Öğrencilerimizden gelen soruları titizlikle yanıtladık ve yazılıma yeni başlayanlar için kafa karışıklığını gidermeye çalıştık. 

00:33 Developer Nedir? 
03:00 Client ve Server Nedir?
04:35 Frontend ve Backend Nedir?
08:55 Herkesten Yazılımcı Olur mu?
17:42 Ne Kadar Sürede Yazılımcı Olunur?
24:27 Bir Yazılımcı Kaç Programlama Dili Bilmeli?

Gibi temel konuları ele aldık ve bu soruların cevaplarını sizinle paylaştık.

Yazılım dünyasına dair merak ettiğiniz her şeyi bizimle paylaşabilirsiniz! Eğer sizin de aklınıza takılan sorular varsa, video altına yorum olarak yazmayı unutmayın. 

Bir sonraki videoda, daha fazla bilgi ve keyifli içeriklerle tekrar görüşmek üzere!

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-04-23 13:15,00:30:50,633,30,14,public,Enabled,6.95,
27,ngpz4m1K9r4,Identity ile Cookie Based Authentication: Sıfırdan Kurulum Rehberi,"Bu video serisinde Authentication (Kimlik doğrulama) ve Authorization (Yetki) konularını ele alıyoruz. İlk olarak, Cookie Based Authentication yöntemine ve bunu Identity ile nasıl gerçekleştireceğimize odaklanıyoruz. 
Ardından, Identity sistemini sıfırdan kurmayı gösteriyoruz, böylece eski videolara başvurmadan kendi kimlik yönetimimizi oluşturabilirsiniz.Ders boyunca, CodeFirst ve Identity sistemini kurmak için gerekli adımları adım adım gösteriyoruz. 
Middleware tanımlamalarından, Entity ve Configuration oluşturmaya kadar her aşamayı detaylı olarak ele alıyoruz. Ayrıca, IEntity ve BaseEntity gibi temel arayüzleri ve sınıfları nasıl oluşturacağınızı da öğreniyorsunuz.

00:00 - Giriş
00:44 - Paketlerin Yüklenmesi
01:29 - Altyapının Oluşturulması
23:23 - Çerez Tanımlanması
27:05 - Veritabanı Tanımlanması
30:59 - Kimlik Doğrulama Nedir?
33:12 - Kontrolcü Oluşturulması
34:24 - Yetkilendirme Özniteliği
35:47 - Kayıt Eylemi
49:30 - Oturum Açma Eylemi
01:03:06 - Çerez Oluşturulması

Sorularınız veya daha fazla bilgiye ihtiyacınız varsa, çekinmeden yorumlarda paylaşın! Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-03-30 19:39,01:07:42,566,27,13,public,Enabled,7.7,
29,_H_D8f7ye6U,JWT Nedir ve .NET Core'da Nasıl Oluşturulur?,"JWT (JSON Web Token) kavramını detaylı bir şekilde ele aldık. JWT, bilgiyi güvenli bir şekilde belirli şifreleme standartları kullanarak taşıyan ve bu bilgiyi dijital olarak imzalayan bir yapıdır.

00:00 Giriş
01:28 Jwt kurulumu
03:15 Jwt servis entegrasyonu
10:00 Jwt oluşturma
19:19 Jwt test



Ardından, .NET Core API projemize JWT'nin nasıl entegre edileceğini adım adım gösterdik. Bu süreçte, JWT Bearer kütüphanesinin projeye eklenmesi, konfigürasyon ayarlarının yapılması ve JWT'nin doğrulanması gibi önemli adımları ele aldık.

Video boyunca, her adımı açıklayarak, JWT'nin nasıl kullanıldığını ve .NET Core API projelerinde nasıl entegre edildiğini detaylı bir şekilde inceledik. Bu sayede, JWT'nin API güvenliğinde nasıl etkili bir rol oynadığını anlama fırsatı bulduk.

Sorularınız veya daha fazla bilgiye ihtiyacınız varsa, çekinmeden yorumlarda paylaşın! 

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-03-23 09:00,00:20:01,691,54,8,public,Enabled,8.97,
30,qFGbenUDJyQ,".NET Core ""Dependency Injection"" Kullanımı","Bu videoda, dependency injection konseptini ele alıyoruz. Dependency injection'ın ne olduğunu, nasıl çalıştığını ve neden bu kadar önemli olduğunu birlikte keşfediyoruz. AddScope, AddTransient ve AddSingleton gibi dependency injection yöntemlerinin nasıl kullanıldığına dair pratik bilgiler de bu videoda yer alıyor.

00:00 Giriş
00:38 Dependency Inversion
03:20 Dependency Injection
14:45 AddScope, AddTransient, AddSingleton

Dependency injection'ın uygulama geliştirme sürecinde sağladığı esneklik, bakım kolaylığı ve test edilebilirlik gibi avantajlarına değiniyoruz. Özellikle, .NET Core platformunda dependency injection'ın nasıl kullanılabileceğini ele alıyor ve hangi durumlarda hangi injection yönteminin tercih edilmesi gerektiğini inceliyoruz.


Sorularınız veya daha fazla bilgiye ihtiyacınız varsa, çekinmeden yorumlarda paylaşın! 

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-03-16 17:30,00:17:31,731,51,27,public,Enabled,10.67,
53,KCSAPbfNG8w,5 - EF Core (.Net Core),"EFCore ile CodeFirst yöntemiyle veritabanı yaratılması : .Net Framework üzerinde kullandığımız Entity Framework'ten farklı olarak bu sistemimizde bir middleware tanımlaması ve Veritabanı ayarlamaları yapabilmek icin EntityTypeConfiguration class'ından ziyade IEntityTypeConfiguration interface'inden nasıl yararlanabiliriz birlikte bakacağız

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-05-04 17:30,00:30:20,784,28,10,public,Enabled,4.85,
31,6IlzbQRyO3k,ASP.NET Core Middleware: Nedir ve Nasıl Kullanılır?,"Bu videoda, ASP.NET Core'daki middleware kavramını detaylı bir şekilde ele aldık.Middleware aslında bir sistemdir ve hayatımıza .Net ile girmiş bir kavram değildir. Bu sistem, istemciler ve sunucular arasındaki ilişkiyi düzenler ve HTTP protokolüyle nasıl çalıştığını anlamamıza yardımcı olur.

Örneğin, istemci bir talepte bulunduğunda, bu talep sunucuya iletilir ve sunucu bir cevap döndürür. Ancak arada birçok işlem gerçekleşir ve bu işlemleri kontrol etmek, yetkilendirme yapmak gibi süreçler ""Middleware"" sistemi tarafından yönetilir.

Middleware, birçok teknolojide bulunan bir yapıdır ancak .NET Core'da daha modüler bir yapıya sahiptir. Bu yapı, sistemdeki işlemleri arayazılımlarla yönetmemize olanak tanır ve sarmal bir şekilde çalışır.

00:00 Giriş
00:58 Middleware Nedir?
06:47 Middleware Oluşturma
15:30 Middleware Test

Abone olmayı unutmayın!

Sorularınızı bekliyorum, görüşmek üzere!

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-03-09 09:00,00:20:08,777,38,11,public,Enabled,6.31,
33,jBMf7g7UPuY,Ntier Mimari'de Automapper Kullanımı,"Bu videoda, daha önce oluşturduğumuz Ntier Ecommerce projesine Automapper kütüphanesini nasıl entegre edeceğimizi adım adım göstereceğiz.

Automapper, yazılım geliştirme süreçlerinde veri eşleme işlemlerini kolaylaştıran ve hızlandıran bir kütüphanedir. .NET platformu için özel olarak geliştirilmiş olan bu kütüphane, bir nesne tipinin özelliklerini başka bir nesne tipine otomatik olarak eşleme yeteneği sunar. Bu da iki farklı nesne arasında veri transferini oldukça basitleştirir.

Biz de bu videoda, Ntier Ecommerce projesinde Automapper'ı nasıl kullanabileceğimizi örneklerle açıklayacağız. Automapper'ın sağladığı kolaylık ve verimlilik ile projemizi nasıl daha etkili hale getirebileceğimizi göreceğiz.

Unutmayın, herhangi bir sorunuz veya geri bildiriminiz varsa yorumlarda bizimle paylaşabilirsiniz. Keyifli izlemeler! 

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-02-05 15:00,00:14:19,809,40,8,public,Enabled,5.93,
34,ajqDr2JtzGk,AutoMapper ile Veri Eşleme,"Bu videoda, yazılım geliştirme süreçlerinde veri eşleme işlemlerini kolaylaştıran ve hızlandıran AutoMapper kütüphanesine odaklanacağız.

AutoMapper, .NET platformu için geliştirilmiş bir nesne eşleme kütüphanesidir. Bu kütüphane, bir nesne tipinin özelliklerini başka bir nesne tipine otomatik olarak eşleme yeteneği sağlar. Yani, iki farklı nesne arasındaki veri transferini kolaylaştırır.

Abone olmayı unutmayın!

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2024-01-22 15:00,00:15:45,993,52,5,public,Enabled,5.74,
36,IIltT8xqaiI,C# Asenkron ve Senkron Programlama,"Bu videoda, C# programlama dilinde asenkron ve senkron programlamanın temellerini ele aldık.. Visual Studio 2022 üzerinde Windows Form Application kullanarak adım adım ilerleyeceğiz.

Geri bildirimleriniz ve sorularınız her zaman değerlidir. 

Abone olmayı unutmayın!

Topluluğa Katıl: https://discord.com/invite/tkZBnuba8h",2023-12-17 14:06,00:21:03,1774,85,9,public,Enabled,5.30,
37,WPaW6qG6LvM,C# Action, Predicate ve Func İşlemleri,"C# programlama dilinde sıkça kullanılan ve güçlü işlevlere sahip olan Action, Predicate ve Func yapılarını keşfedeceğiz. Action ile nasıl belirli bir eylemi gerçekleştirebileceğinizi, Predicate ile koşullar belirleyerek elemanları filtreleyebileceğinizi ve Func ile değer döndürebileceğiniz fonksiyonları nasıl oluşturabileceğinizi adım adım öğreneceksiniz.

Geri bildirimleriniz ve sorularınız her zaman değerlidir. 

*Abone olmayı unutmayın!*

*Topluluğa Katıl:*https://discord.com/invite/tkZBnuba8h",2023-11-26 07:00,00:18:24,875,38,6,public,Enabled,5.3,
38,UJm6L33mTXI,C# Delegate İşlemleri - Temel Bilgiler ve Kullanım Örnekleri,"Bu video, C# programlama dilindeki delegate kavramını anlamanıza ve kullanmanıza yardımcı olacak. Delegate nedir, nasıl tanımlanır, nasıl kullanılır, hepsini bu videoda detaylı bir şekilde göreceksiniz.

C# programlama dilinde ""delegate"", başka bir metodu temsil eden bir türdür. Başka bir deyişle, bir delegate, metotların referansını tutabilen bir nesnedir. Bu, metotları parametre olarak iletebilmenizi, bir metodu bir değişkene atayabilmenizi ve bir metottan başka bir metoda geri çağrı yapabilmenizi sağlar.

Geri bildirimleriniz ve sorularınız her zaman değerlidir. İhtiyaç duyduğunuz konuları veya projeleri belirtmekten çekinmeyin.

*Topluluğa Katıl:*https://discord.com/invite/tkZBnuba8h",2023-11-19 07:00,00:18:06,1350,58,5,public,Enabled,4.67,
71,rIZUt64_RSc,Entity Framework-3 (CRUD) Update,Delete,"Crud, ""Create, Read, Update, Delete"" kelimelerinin baş harflerinden oluşan bir kısaltmadır. 
Create (Oluşturma): Veritabanına yeni bir veri ekleme işlemidir.
Read (Okuma): Veritabanında bulunan verileri okuma işlemidir.
Update (Güncelleme): Veritabanında bulunan verileri güncelleme işlemidir.
Delete (Silme): Veritabanında bulunan verileri silme işlemidir.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-01-02 17:00,00:09:26,354,16,2,public,Enabled,5.8,
40,lmMWkF9cUVU,9-.NET ile Eticaret Projesi Ntier - Sepet İşlemleri,"Bu video, .NET ile Eticaret Projesi (Ntier) eğitim serisinin sonuna gelmiş bulunuyoruz. Serinin bu son videosunda, sepet işlemlerini ele alarak alışveriş sepeti metotlarını nasıl ekleyeceğinizi, yöneteceğinizi ve optimize edeceğinizi öğreneceksiniz.

.NET dünyası her gün gelişiyor ve biz de bu gelişmeleri takip ediyoruz. Bu nedenle, ilerleyen zamanlarda bu seriyi daha da zenginleştireceğiz. Yeni konular, özellikler ve projelerle karşınıza çıkmak için sabırsızlanıyoruz.

Geri bildirimleriniz ve sorularınız her zaman değerlidir. İhtiyaç duyduğunuz konuları veya projeleri belirtmekten çekinmeyin.


 *GitHub Proje Linki:*https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl:*https://discord.com/invite/tkZBnuba8h",2023-11-05 07:00,00:24:22,865,25,18,public,Enabled,4.97,
41,GAo-IU-007o,8-.NET ile Eticaret Projesi (Ntier) - WebAPI,"Bu dersimizde projeye WebAPI katmanını dahil ederek İstek (Request) ve Cevap (Response) modellerini tanımladık. AppUser nesnesinin WebAPI katmanına nasıl dahil edileceğini, Api isteklerini nasıl oluşturulacağını anlattık. Umarım faydalı olmuştur. Takip etmeyi unutmayın!

*Projeyi İndirin ve İzleyin:* https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl:* https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!",2023-10-29 20:30,01:18:27,1124,30,15,public,Enabled,4.0,
42,sxIbfESjmGo,7 - .NET ile Eticaret Projesi (Ntier) - Dependency Resolvers,"Bu videoda, projemizin temel altyapısını oluşturmak için Dependency Resolvers'ı ele alacağız.
Dependency Resolvers, uygulamamızın farklı bileşenlerini bir araya getirirken, kodumuzun daha temiz ve yönetilebilir olmasına yardımcı olan önemli bir konsepttir. 
Videoda ayrıca, hangi Dependency Injection kütüphanelerini kullanabileceğinizi ve bu kütüphaneleri nasıl yapılandıracağınızı da göstereceğiz. Bu sayede, projenizin büyüdükçe daha fazla esneklik ve ölçeklenebilirlik elde edebileceksiniz.

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-09-24 12:57,00:12:06,645,20,9,public,Enabled,4.50,
43,Lv5XQLTH7QY,6 - .NET ile Eticaret Projesi (Ntier) -  Business Logic Layer,"Bu videoda, .NET kullanarak geliştirdiğimiz E-Ticaret Projesi'nin Business Logic Layer (İş Mantığı Katmanı) üzerine odaklanıyoruz. Proje, gelişmiş e-ticaret özellikleri sunan bir N-tier (katmanlı) uygulama olarak tasarlandı.

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-09-17 12:00,00:36:41,784,23,10,public,Enabled,4.21,
9,P1rZTAjywYc,Bölüm 7: Onion Mimari Infrastructure Katmanı ve IOC Yönetim | C# Eğitimi,"🔗 GitHub Proje Linki: https://github.com/softbreak/Softbreak.OnionArch

Bu bölümde, Onion Mimari kapsamında Infrastructure katmanını tasarlamaya ve IOC (Inversion of Control) Container'ı yönetmeye odaklanıyoruz. Bağımlılıkların gevşetilmesi için Dependency Injection prensiplerinin nasıl kullanılacağı ve Static Extension Methods ile projeye esneklik kazandırmanın yolları detaylı bir şekilde ele alınıyor. Ayrıca, DbContext tanımları, Connection String yönetimi ve IOC Container'a bağımlılık ekleme süreçleri pratik örneklerle gösteriliyor.

Serinin önceki bölümlerindeki bilgilerle birlikte altyapıyı sağlam bir şekilde oluşturmak isteyenler için kaçırılmayacak bir rehber!


🎉 Youngling Üyelik Seviyesi!
Yazılım dünyasında bir adım öne geçmek ister misiniz? Youngling seviyesine katılarak şu özel avantajlardan yararlanabilirsiniz:

📹 Sadece üyeler için hazırlanmış özel eğitim videoları.
💬 Yazılım topluluğumuzla daha yakın bir iletişim fırsatı.
🚀 Size özel içerik önerileri ve projeler.
✨ Üye olun ve yazılım kariyerinizde bir fark yaratın!

👉 Üyelik bağlantısı: https://www.youtube.com/channel/UCzdLcari9TIx-rtWzDNXvdQ/join",2025-01-18 11:00,00:38:35,372,12,6,public,Enabled,4.84,
44,Md-jdha2d3M,5 - .NET ile Eticaret Projesi (Ntier) -  Repository Pattern,"Bu dersimizde projenin temelini oluşturan önemli tasarım desenlerinden biri olan ""Repository Pattern"" ile tanışacaksınız. Repository Pattern, yazılım geliştirme sürecinde veritabanı işlemlerini daha düzenli ve yönetilebilir hale getirmek için kullanılan bir yapıdır. Bu desen sayesinde, veritabanıyla iletişim kurma karmaşıklığı uygulama kodundan ayrı bir katmana taşınır. Yani, kodunuz veritabanı işlemleri ile dolu değil, bunun yerine bu işlemleri yöneten bir ""Repository"" katmanı bulunur.

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-08-25 18:20,00:36:51,921,31,11,public,Enabled,4.56,
46,yz2bNrDeBr0,3 - .NET ile Eticaret Projesi (Ntier) - Veri Erişim Katmanı (DAL),"Bu eğitim videosunda, .NET platformunda Ntier mimarisiyle eticaret projesinin Veri Erişim Katmanı (Data Access Layer) oluşturma sürecini ayrıntılı bir şekilde ele alıyoruz. Veri Erişim Katmanı, eticaret projemizin veritabanı işlemlerini yöneteceğimiz önemli bir bileşendir ve bu videoda nasıl oluşturulacağını adım adım öğrenceğiz.

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-08-06 16:00,00:12:22,814,20,2,public,Enabled,2.70,
48,9lA9_ebx9OE,2 - .NET ile Eticaret Projesi (Ntier) - Proje Oluşturma ve Entitylerin Tanımlanması,"Bu eğitim videosunda, .NET platformunda C# programlama dilini kullanarak Ntier mimarisiyle eticaret projesi geliştirmeye devam ediyoruz. İkinci adımda, eticaret projesini başlatmak için Visual Studio'da yeni bir proje oluşturma işlemlerini adım adım göstereceğiz. Aynı zamanda, projenin temel yapı taşlarından olan ""Entity""lerin tanımlanması sürecine de değineceğiz.

Eğitim serimizin geri kalanında, proje geliştirmenin ileri seviye adımlarını ele alacak ve eticaret dünyasında başarılı projeler oluşturmanıza yardımcı olacağız. 

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-08-06 16:00,00:14:40,1165,25,6,public,Enabled,2.66,
49,a43IF4ZkiWw,4 - .NET ile Eticaret Projesi (Ntier) - Context Sınıfı,"Bu eğitim videosunda, .NET platformunda Ntier mimarisiyle eticaret projesinde Context sınıfını yönetmeyi detaylı bir şekilde öğreniyoruz. Context sınıfı, veritabanı işlemlerini yönetmek için kullanılan önemli bir bileşendir. Bu videoda, Context sınıfının nasıl oluşturulacağı, yapılandırılacağı ve veri tabanı işlemlerine nasıl entegre edileceği konularını ele alıyoruz.

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/SoftbreakEcommerceProject

*Topluluğa Katıl*
https://discord.com/invite/tkZBnuba8h

Sorularınız veya geri bildiriminiz varsa lütfen yorumlarda paylaşın!

Videoyu beğendiyseniz, abone olmayı ve bildirimleri açmayı unutmayın, böylece yeni içeriklerimizi kaçırmazsınız. 🚀",2023-08-06 16:00,00:07:21,650,17,0,public,Enabled,2.62,
50,G3xuP8bKZIs,.NET ile Identity Özelleştirmesi ve Veritabanı Ayarları,"Bu dersimizde, .NET kullanarak Identity Özelleştirmesi ve veritabanı ayarları'nın nasıl yapılacağını öğreneceksiniz. Videoda, projenin oluşturulması, klasörlerin yapılandırılması, gerekli kütüphanelerin kurulumu ve Identity sistemi üzerindeki özelleştirmeler gibi işlemleri adım adım göreceksiniz.

IdentityUser ve IdentityRole sınıflarının nasıl özelleştirileceğini öğrenirken, kullanıcı profil, ürün, kategori, sipariş ve sipariş detay sınıflarını nasıl oluşturacağınızı keşfedeceksiniz. Ayrıca, Configuration sınıfıyla veritabanı ayarlarını yapılandıracak ve middleware ayarlarını yaparak uygulamanızı yönetebileceksiniz. 

01:15 Giriş
01:41 Proje oluşturma
02:33 Klasörlerin Oluşturulması
04:38 Kütüphanelerin kurulması
09:08 IEntity ve BaseEntity
14:14 IdentityUser Özelleştirme
16:36 IdentityRole Özelleştirme
20:08 IdentityUserRole Özelleştirme
21:00 Kullanıcı profil sınıfı
21:21 Ürün sınıfı
22:03 Kategori sınıfı
23:07 Sipariş sınıfı
24:17 Sipariş detay sınıfı
39:39 Configuration sınıfı
44:31 Context sınıfı
48:01 Middleware ayarı
49:30 Veritabanı oluşturma

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.


Discord
https://discord.com/invite/tkZBnuba8h",2023-07-14 11:03,00:49:50,2084,32,12,public,Enabled,2.11,
51,CUD0lrlml1I,1-.Net Core Identity (Introduction),"Merhaba arkadaşlar! Bu videoda sizlere .NET Core Identity kütüphanesi hakkında temel bir giriş yapacağız. .NET Core Identity, ASP.NET Core uygulamalarında kullanıcı kimlik doğrulama ve yetkilendirme işlevlerini kolayca entegre etmemizi sağlayan güçlü bir kütüphanedir.

Bu videoda, .NET Core Identity'nin ne olduğunu, nasıl kullanıldığını ve hangi faydaları sunduğunu detaylı bir şekilde göreceğiz. Kullanıcı kaydı, oturum açma, rol yönetimi gibi temel yetenekleri nasıl uygulayabileceğimizi adım adım öğreneceğiz.

Ayrıca, .NET Core Identity'nin nasıl yapılandırılacağını, kullanıcıları ve rolleri nasıl veritabanında depolayabileceğimizi ve farklı kimlik doğrulama yöntemlerini nasıl entegre edebileceğimizi de göstereceğim.

Unutmayın, bu seri .NET Core Identity'nin temellerini ele alacak ve daha ileri seviye konuları da kapsayacak. 

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-06-04 15:00,00:17:08,911,48,10,public,Enabled,6.37,
55,lwQJW6JezSU,3 - Data Transfer (.Net Core),"DataTransfer nesneleri MVC platformunda verileri Action'dan View'a ve Action'dan Action'a transfer etmemize yarar. İlkel tip ve ilkel tip gibi davranan tiplerde Model'i kullanmaktansa bu nesneleri kullanarak veri transfleri yapmak bizim daha hızlı bir şekilde ve Model'in gücünü harcamadan kullanıcılara veya baska Action'lara istediğimiz veri göndermemizi saglar

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-04-14 19:00,00:23:06,785,48,5,public,Enabled,6.75,
56,u8M9hxehFDQ,2 - Proje Oluşturma  (.Net Core),"Bu dersimizde Asp.net core ile sıfırdan bir proje nasıl oluşturulduğunu, proje oluştururken nelere dikkat edileceğini, middleware katmanını hangi class'a  dahil edileceğini basit bir şekilde anlattık. Sorularınızı dilerseniz yorum alanında dilerseniz de discord kanalımızda paylaşabilirsiniz.


Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-04-07 18:00,00:19:23,1003,48,16,public,Enabled,6.38,
57,kWAczSL54Fk,1-Başlangıç (.Net Core),"NET Core, Microsoft tarafından geliştirilen, açık kaynaklı ve platform bağımsız bir yazılım geliştirme çerçevesidir. .NET Core, .NET Framework'ün birçok özelliğini içerir ve Windows, Linux ve macOS gibi farklı işletim sistemlerinde çalışabilir.

.NET Core Middleware, HTTP isteklerini işlemek ve yanıtlamak için ara katmanlardır. Her bir middleware, gelen HTTP isteği ve yanıtı değiştirebilir veya geçersiz kılabilecek kod içerebilir.

.NET Core, gelen HTTP isteklerini işlemek ve yanıtlamak için bir pipeline (boru hattı) mekanizması kullanır. Bu pipeline, middleware'ların birbirleriyle bağlantılı olduğu bir zincirdir.

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-03-31 19:34,00:08:13,3190,86,9,public,Enabled,2.98,
58,LktRbTXPok0,2-Mvc CRUD (.Net Framework),"Bu video, .NET Framework MVC ile uygulama geliştirme konusunda yeniyseniz veya temel bilgilerinizi pekiştirmek istiyorsanız sizin için ideal bir kaynak olabilir. 

.NET Framework MVC kullanarak CRUD (create, read, update, delete) işlemlerinin nasıl yapıldığını öğreniyoruz. Bu işlemler, bir veritabanı tablosundaki verileri eklemek, okumak, güncellemek ve silmek için kullanılır. Videoyu izleyerek, .NET Framework MVC'nin temel prensiplerini öğrenecek ve CRUD işlemlerini nasıl uygulayacağınızı adım adım öğreneceksiniz. 

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-03-24 17:00,00:25:21,723,23,6,public,Enabled,4.1,
59,5GYzDA1jCXU,1-Mvc Nedir? (.Net Framework),".NET Framework, Microsoft tarafından geliştirilen bir yazılım çerçevesidir. Bu çerçeve, .NET teknolojilerini kullanarak uygulama geliştirmeyi kolaylaştıran bir dizi araç ve kaynak sağlar.

MVC, Model-View-Controller  kelimelerinin kısaltılmışı olarak  kullanılır ve web uygulamaları için bir tasarım desenidir. Bu desen, uygulamanın farklı bölümlerinin birbirinden bağımsız olarak tasarlanmasını ve geliştirilmesini sağlar. Bu sayede, uygulamanın bakımı ve geliştirilmesi daha kolay hale gelir.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-03-17 17:15,00:18:22,2231,61,0,public,Enabled,2.73,
60,ItcuzGOPi4I,NTier Architecture UI - (Güncelleme),"UI katmanı Kullanıcı ile etkileşime girecek olan katmandır...Mimarimizin bu katmanında biz seçtiğimiz platforma göre tasarımımızı ve kullanıcımızın programımızı nasıl kullanmasını istediğimize göre onun etkileşime girebileceği alanları yaratırız.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-02-24 17:00,00:22:55,805,24,8,public,Enabled,3.98,
61,b46nw2q45JU,NTier Architecture Presantation Layer (UI Katmanı, Ekleme, Listeleme, Silme) - 5,"UI katmanı Kullanıcı ile etkileşime girecek olan katmandır...Mimarimizin bu katmanında biz seçtiğimiz platforma göre tasarımımızı ve kullanıcımızın programımızı nasıl kullanmasını istediğimize göre onun etkileşime girebileceği alanları yaratırız.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-02-10 17:00,00:26:33,1022,16,9,public,Enabled,2.45,
62,5AEi05Ik4qQ,NTier Architecture Business Logic Layer (BLL Katmanı) - 4 (Devamı),"Business Logic Layer (BLL) katmanı bizim iş mantığımızı mimarimize entegre ettiğimiz katmandır. Bu katmanda  kullanmak istedigimiz metotları tek bir cati altinda toplama (Interface) ve sahsilestirme (CRUD) islemlerini yapariz.Bu islemler tasarim desenlerinin bize sağladığı esnekliklerle entegre edilir.
Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-02-03 18:00,00:24:51,1094,25,2,public,Enabled,2.47,
63,zYrWyNsA7HE,NTier Architecture Business Logic Layer (BLL Katmanı) - 4,"Business Logic Layer (BLL) katmanı bizim iş mantığımızı mimarimize entegre ettiğimiz katmandır. Bu katmanda  kullanmak istedigimiz metotları tek bir cati altinda toplama (Interface) ve sahsilestirme (CRUD) islemlerini yapariz.Bu islemler tasarim desenlerinin bize sağladığı esnekliklerle entegre edilir.
Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-01-27 17:30,00:21:56,1352,35,15,public,Enabled,3.70,
65,joucUGTKDQw,NTier Architecture Data Access Layer (DAL Katmanı) - 3,"Data Access Layer (veriye ulaşım katmanı )N-Tier katmanlı mimarimizin, tamamen veri erişimi  sistemi ile ilgilenecek olan katmanıdır...Bu katman, verilere ulaşabildiği gibi bu verilerin manipule edilmesinden (Ekleme,silme,güncelleme) sorumludur..Böylece mimarimizdeki sorumluluklar ayrılarak esnek ve  yönetilebilir mekanizma geliştirilecektir.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-01-20 18:30,00:16:46,1721,35,18,public,Enabled,3.8,
67,sAsupX1q8Xg,NTier Architecture (Map Katmanı) - 2,"Map katmanı, veritabanımızdaki tabloları temsil eden class'larımızın tabloya dönüşme aşamalarında istediğimiz ayarlamaları yapabilmemiz için daha esnek ve performanslı bir şekilde gerçekleştirdiğimiz katmandır.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-01-18 17:30,00:24:00,2172,50,19,public,Enabled,3.18,
68,jU0R__yOZ2o,Encapsulation (kapsülleme) #encapsulation #oop #csharp,,2023-01-14 14:02,00:01:01,208,15,0,public,Enabled,7.21,
69,jmS8mz_KAVo,NTier Architecture (Çok Katmanlı Mimari) - 1,"Çok katmanlı mimari olarak da bilinen N katmanlı mimari (NTier Architecture), uygulamanın farklı işlemlerde çalışan birden çok katmanlara ayrıldığı bir yazılım tasarım modelidir. 
Her katman belirli bir amaca hizmet eder ve iyi tanımlanmış bir arayüz aracılığıyla diğer katmanlarla iletişim kurar. Bu, farklı katmanlar bağımsız olarak geliştirilebildiği, test edilebildiği ve dağıtılabildiği için daha fazla esneklik ve ölçeklenebilirlik sağlar. ""N-tier"" içindeki ""N"", mimarideki katman veya katman sayısını ifade eder. N katmanlı mimarilerin yaygın örnekleri, 
3 katmanlı 
• Data (veri)
• Business (iş)
• Presentation (sunum)
mimarileri içerir.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-01-13 19:15,00:22:05,10171,135,31,public,Enabled,1.63,
70,5_6eUQf35HQ,Entity Framework - Code First,"Code First, bir yazılım geliştirme yöntemidir. Bu yöntemde, veritabanı tasarımı yazılımın içeriğine göre yapılır ve veritabanı önceden oluşturulmaz. Veritabanı, yazılımın içeriğine göre otomatik olarak oluşturulur ve güncellenir. Bu yöntem, veritabanı tasarımı sırasında zaman kaybını önler ve yazılımın içeriğine uygun bir veritabanı oluşturmayı kolaylaştırır.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2023-01-06 18:17,00:39:04,613,31,3,public,Enabled,5.55,
72,Stmzu4gFzGM,Veritabanı sistemlerini neden kullanırız?,,2023-01-01 19:45,00:01:01,43,5,0,public,Enabled,11.63,
73,1PYNoJYsMPY,Entity Framework-2 (CRUD) Create,Read,"Crud, ""Create, Read, Update, Delete"" kelimelerinin baş harflerinden oluşan bir kısaltmadır. 
Create (Oluşturma): Veritabanına yeni bir veri ekleme işlemidir.
Read (Okuma): Veritabanında bulunan verileri okuma işlemidir.
Update (Güncelleme): Veritabanında bulunan verileri güncelleme işlemidir.
Delete (Silme): Veritabanında bulunan verileri silme işlemidir.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-12-30 18:20,00:09:27,465,21,2,public,Enabled,4.95,
74,3RYSHVacb-8,Entity Framework-1 (Database First),"Entity Framework .NET için bir veritabanı katmanıdır. Bu, veritabanı işlemlerini yaparken kodunuzda SQL sorguları yazmanıza gerek kalmadan, veritabanınızın tablo ve kayıtlarını nesneler olarak temsil etmenizi sağlar. Bu nesneler aracılığıyla veritabanına CRUD (Create, Read, Update, Delete) işlemlerini gerçekleştirebilirsiniz. EF, veritabanınızın yapısını (schema) değiştirdiğinizde otomatik olarak bu değişiklikleri takip edebilir ve güncelleştirir.

Database First (Veritabanı Öncelikli) yaklaşımı, veritabanının yapısının (schema) önceden oluşturulmuş olmasını ve bu yapı üzerinden uygulama geliştirilmesini hedefler. Bu yaklaşımda, veritabanı önceden oluşturulur ve bu veritabanının yapısı üzerinden uygulama geliştirilir.

Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-12-28 19:34,00:11:02,1982,37,3,public,Enabled,2.2,
75,x2-cHD_CS8w,Mssql MMORPG Veritabanı (Tabloların Oluşturulması) Bölüm - 1,"Daha önce OOP (Nesne yönelimli programlama) prensiplerini öğrenmiştik. Bu dersimizde nesne yönelimli programlama (OOP) prensipleri içerisinde öğrenmiş olduğumuz class (Sınıf) yapısını veritabanı tabloları haline getirdik. Bu tablo yapılarını ve ilişkilendirmeleri daha rahat kavrayabilmek adına örnek bir oyun veritabanı seçtik. Sizlerden gelecek ilgi doğrultusunda bu veritabanını çok daha fazla geliştirmeyi düşünüyoruz. 
Aklınıza takılan sorularınızı discord sunucumuzdan paylaşabilirsiniz.
Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-12-19 17:00,00:22:27,420,16,2,public,Enabled,4.29,
76,KxET1z6LuG4,C# ile detaylı bir şekilde nasıl kullanıldığını öğrenmek istiyorsan kanalımızdan ulaşabilirsiniz.,Neredeyse bütün programlama dillerinde kullanılan nesne yönelimli programlama (oop) mantığını C# ile detaylı bir şekilde nasıl kullanıldığını öğrenmek istiyorsan kanalımızdan ulaşabilirsiniz.,2022-12-18 15:25,00:01:01,189,11,0,public,Enabled,5.82,
77,4s7PNZn_2S0,Nedir bu OOP?,Neredeyse bütün programlama dillerinde kullanılan nesne yönelimli programlama (oop) mantığını C# ile detaylı bir şekilde nasıl kullanıldığını öğrenmek istiyorsan kanalımızdan ulaşabilirsiniz.,2022-12-18 15:21,00:01:06,3,0,0,private,Enabled,0.0,
39,xH7Md7geuzc,9 Short2,,2023-11-07 17:53,00:00:25,0,0,0,private,Enabled,.,
78,pYtNkLD3Y60,MSSQL Ders 4 - Normalizasyon-2,"Merhaba arkadaşlar! Bir önceki dersimizde veritabanı anormalliklerinden bahsederek normalizasyon kurallarını anlatmıştık. Geçen dersimizde bir'e çok ve çok'a çok ilişkilendirmelerden bahsetmiştik. Bu dersimizde ise bir'e bir ilişkiyi anlattık. Peki bir'e bir ilişkilendirme hangi durumlarda kullanılır? 

Aklınıza takılan sorularınızı discord sunucumuzdan paylaşabilirsiniz.
Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-12-12 17:00,00:09:37,334,15,0,public,Enabled,4.49,
79,9DoWHywsL-A,MSSQL Ders 3 - Normalizasyon-1,"Önceki dersimizde bir veritabanı'nın nasıl oluşturulduğunu, veritabanı içerisinde verilerimizi saklayacağımız tabloları nasıl tanımladığımızı, bu tablolar içerisinde olması gereken kolon ve satırların nasıl açıldığını işlemiştik. Bu dersimizde ise ""Normalizasyon"" kurallarını işledik. 

Aklınıza takılan sorularınızı discord sunucumuzdan paylaşabilirsiniz.
Discord sunucusu: https://discord.gg/tkZBnuba8h

-------------------------------------------------------------------------------------------------------------
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-11-28 17:00,00:43:46,743,22,4,public,Enabled,3.50,
81,v5lrRc0rFKk,MSSQL Ders 2 - Örnek Veritabanı,"İkinci dersimizde bir veritabanı'nın ve tablo'nun nasıl oluşturulduğunu, oluşturulan tablo içerisinde kolonların nasıl tanımlandığını ve isim standartlarını işledik. 

Sql Server: https://www.microsoft.com/tr-tr/sql-server/sql-server-downloads
-----------------------------------------------------------------------------------------------------------------------------------------------------------

Discord sunucusu: https://discord.gg/tkZBnuba8h
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-11-21 17:00,00:40:29,509,13,4,public,Enabled,3.34,
83,nbqg4I5ieqo,OOP Ders 7-Test İşlemleri,"Bu Dersimizde projemize daha önce uygulamış olduğumuz işlemleri console (terminal) üzerinden test ettik. 

• Class (Sınıf) 👉 https://www.youtube.com/watch?v=XPD5RgMl8hc&t=6s
• Encapsulation (Kapsülleme) 👉 https://www.youtube.com/watch?v=QHnHyRIo9Jo
• Kalıtım/Miras (Inheritance) 👉 https://www.youtube.com/watch?v=CvROrQCUY6o&t=46s
• Polymorphism(Çok Biçimlilik) 👉  https://www.youtube.com/watch?v=pKY9AOLTnh8&t=1758s
• Abstraction (Soyutlama) 👉 https://www.youtube.com/watch?v=IBeqwKvHzxU
---------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-11-11 17:00,00:47:30,610,20,6,public,Enabled,4.26,
84,_S8NmIFvkTw,OOP Ders 6-Ek İşlemler (Saldırı ve eşya işlemleri),"Nesne yönelimli programlama (OOP) derslerini toplamda 5 video ile tamamladık. Bu dersimizde daha önce  öğrenmiş olduğumuz aşağıdaki prensipleri oyunumuz içerisinde nasıl kullanıldığını işledik. 

• Class (Sınıf) 👉 https://www.youtube.com/watch?v=XPD5RgMl8hc&t=6s
• Encapsulation (Kapsülleme) 👉 https://www.youtube.com/watch?v=QHnHyRIo9Jo
• Kalıtım/Miras (Inheritance) 👉 https://www.youtube.com/watch?v=CvROrQCUY6o&t=46s
• Polymorphism(Çok Biçimlilik) 👉  https://www.youtube.com/watch?v=pKY9AOLTnh8&t=1758s
• Abstraction (Soyutlama) 👉 https://www.youtube.com/watch?v=IBeqwKvHzxU

Video biraz uzun olduğu için toplamda 2 bölüm halinde yayınlayacağız. Oyunun test işlemleri 7. bölümde işlenecek.
---------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-11-04 17:00,00:25:31,612,30,13,public,Enabled,7.3,
85,IBeqwKvHzxU,OOP Ders 5-Veri Soyutlama (Abstraction) Nedir?,"Bu dersimizde OOP prensiplerinin sonuncusu olan soyutlama (abstraction) prensibini, daha önce oluşturmuş olduğumuz projemiz içerisinde ne olduğunu ve nasıl kullanıldığını işledik. 

proje: https://github.com/softbreak/OOP

-----------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-10-28 17:00,00:46:37,873,32,9,public,Enabled,4.70,
86,pKY9AOLTnh8,OOP Ders 4-Çok Biçimlilik (Polymorphism) Nedir? Nesne'nin üyelerine nasıl uygulanır?,"Bu dersimizde nesne yönelimli programlanın bir diğer prensibi olan *çok biçimlilik* (Polymorhism) konusunu işledik. Bir önceki bölümde belirttiğimiz gibi, Kalıtım, başka bir sınıftan öznitelikleri ve yöntemleri miras almamızı sağlar. Polymorhism, farklı görevleri gerçekleştirmek için çok biçimli olarak kullanılabilir.

proje: https://github.com/softbreak/OOP/tree/main/4-Polymorphism

-------------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-10-21 17:00,00:58:30,1074,43,9,public,Enabled,4.84,
45,RIVxlO8BfW0,.NET ile E-ticaret projesi (Ntier) #shorts  #csharp #yazılım #programlama #eğitim #eticaret #web,Bu eğitim videosunda, .NET platformunda Ntier mimarisiyle eticaret projesinin Veri Erişim Katmanı (Data Access Layer) oluşturma sürecini ayrıntılı bir şekilde ele alıyoruz. Veri Erişim Katmanı, eticaret projemizin veritabanı işlemlerini yöneteceğimiz önemli bir bileşendir ve bu videoda nasıl oluşturulacağını adım adım öğrenceğiz.,2023-08-08 19:51,00:01:01,174,9,0,public,Enabled,5.17,
87,CvROrQCUY6o,OOP Ders 3-Kalıtım (Inheritance) Nedir? Sınıflara Kalıtım Nasıl Uygulanır?,"Bir önceki dersimizi encapsulation (kapsülleme) ile sonlandırmıştık. Bu dersimizde ise nesne yönelimli programlama (oop)'nin temel prensiplerinden kalıtım (inheritance) prensibinin ne olduğunu ve nasıl kullanıldığına yoğunlaşacağız.  Kalıtım, bir sınıfın üst sınıftan miras almasına denir. C# programlama dili tekli kalıtıma izin verir. C#,  çoklu kalıtım yerine interface olarak adlandırılan nesnelerden faydalanılarak kalıtımı gerçekleştirir.

proje: https://github.com/softbreak/OOP/tree/main/3-Inheritance/ConsoleRPG_0

---------------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-10-14 11:06,00:49:56,1216,49,8,public,Enabled,4.69,
89,XPD5RgMl8hc,Ders 1-C# ile console platformunda metin tabanlı oyun nasıl yazılır?,"Sevgili arkadaşlar, biliyorsunuz ki C# Introduction derslerimiz bittikten sonra bir süre konu anlatımlarına ara vermiştik. Bunun en büyük sebebi çok önemli bir Yazılım Felsefesi olan OOP'in detaylarını size klasik bir yöntemle anlatmaktan ziyade yaratıcı bir şekilde anlatmayı tercih etmemizdi. Ne de olsa şu anda neredeyse her kaynakta OOP prensiplerine uygun bir E-Ticaret , Blog veya Arbitraj sitesi nasıl yapılır bulabilirdiniz...İronik olan şey şu ki bu felsefeyi aslında Yazılıma yeni başlayan birine anlatmak için aslında en uygun algoritma bir oyun algoritması olmasına rağmen gerek Türkiye'de gerekse yazılımı öğretmek icin kurulmus olan cogu siteye oyunlarla ilgili bir tanıtım / başlangıç yapılmamaktadır. Halbuki bu felsefeyi yeni ögrenen kişilerin bir bilgisayar oyununa entegre olmaları sağlandığı takdirde o kişi artık tüm projeleri bu mantıkta düşünebilecek seviyeye zaten gelecektir...Bunun eksikliğini fark edip sizlere oldukça farklı bir sistemle geri döndüğümüzü bildirmekten mutluluk duyarız. İcinizden hic bilgisayar oyunuyla ilgisi bulunmayanların hafif bir şekilde sitem ettiğini duyar gibi olsam da sizlere şunu söylemek isterim ki inanın hiç ama hiç önemli degil. Oyun dedigimiz yapı bir eglence ürünüdür. Ve her ne kadar oynamaktan zevk almadığınızı düsünseniz de mantığını anlamak hem çok kolaydır hem nesnel programlama yöntemine en kolay adapte olabileceğiniz bir sistemdir. Oyun oynamayı sevmiyor olsanız bile mantığını anlamanın hem cok farklı, hem cok kolay ve eglenceli olduğunu görecek hem de bir oyun söz konusu olduğunda Bilgisayar gibi düşünmenin tam olarak ne demek olduğunu , bilgisayarın davranış bicimini daha rahat hissedeceksiniz
-------------------------------------------------------------------------------------------------------------------------------------------------------------

*Projeyi İndirin ve İzleyin:*
https://github.com/softbreak/ConsoleRPG_0

Discord sunucusu: https://discord.gg/fne5AZMyBh",2022-09-30 19:33,00:56:38,9498,226,36,public,Enabled,2.76,
91,1yJIlOl9jOE,C#-Ders 5-Diziler, Koleksiyonlar(Arrays, Collections) 💻,"Bu dersimizde C# programlama dilinde diziler (arrays) konusunu işledik. Aynı zamanda koleksiyon mantığını da inceledik. 

✅ array
✅ collection

❓ yaşamış olduğunuz hataları veya soruları discord sunucumuzda paylaşabilirsiz.

softBreak

Discord sunucusu: https://discord.gg/mHWKhjQNGx",2022-07-01 14:29,00:45:43,548,19,2,public,Enabled,3.83,
92,mDhymhDLurM,C#-Ders 4-Döngüler (for,while,foreach,do while) 💻,"Bir önceki dersimizde karar mekanizmalarından bahsetmiştik. Bu dersimizde de döngülerden (loops) bahsedeceğiz. Döngülerin ne işe yaradığını ve yazılım biliminde neden bulunduğunu inceleceğiz. 

✅ for
✅ while
✅ do while
✅ foreach

❓ yaşamış olduğunuz hataları veya soruları discord sunucumuzda paylaşabilirsiz.

softBreak

Discord sunucusu: https://discord.gg/mHWKhjQNGx",2022-06-24 16:00,00:46:11,323,14,0,public,Enabled,4.33,
93,7vL5POYT_Dk,C#-Ders 3-Karar Yapıları (if..else.. switch... case...) 💻,"Önceki derslerimizde dışarıdan veri alma, verinin tipini değiştirme, hata yakalama gibi konuları işlemiştik. Bu dersimizde de dışarıdan alınan veriler ve program içerisinde uygulayacağımız karar mekanizmalarını işledik.

✅ if
✅ else if
✅ else
✅switch
✅ case

❓ yaşamış olduğunuz hataları veya soruları discord sunucumuzda paylaşabilirsiz.

softBreak

Discord sunucusu: https://discord.gg/mHWKhjQNGx",2022-06-17 17:05,00:48:41,460,15,0,public,Enabled,3.26,
54,lCm1WHokhI8,4 - Model Transfer (.Net Core),"Bu videoda MVC platformunda DataTransfer nesnelerinin kullanımı hakkında bilgi vereceğim. DataTransfer nesneleri, verileri Action'dan View'a veya Action'dan Action'a transfer etmek için kullanılır. Bu nesneler, ilkel tipler veya ilkel tiplere benzer davranan tipler yerine Model kullanmak yerine kullanılır. Bu sayede veri transferlerimizi daha hızlı bir şekilde yapabiliriz ve Model'in gücünü harcamadan istediğimiz verileri kullanıcılara veya başka Action'lara gönderebiliriz.

Beğenmeyi, paylaşmayı ve abone olmayı unutmayın! Teşekkürler.

*Discord*
https://discord.com/invite/tkZBnuba8h",2023-04-25 17:00,00:25:21,693,41,11,public,Enabled,7.50,
94,uVfBWhyGmGg,C#-Ders 2-Tip Dönüşümleri, Hata Yakalama (Converts, Try-Catch) 💻,"Bir önceki dersimizde tipler, değişkenler, olay yönetimi gibi kavramları öğrenmiştik. Bu dersimizde ise oluşturmuş olduğumuz tipleri arasında dönüşümleri nasıl gerçekleştirebiliriz? ve dönüşüm esnasında alınan hataları nasıl kontrol altına alabilir? bu kavramları işleyeceğiz.

✅ Tip Dönüşümleri (Converts), 
✅ Try-Catch (Hata Yakalama)

❓ yaşamış olduğunuz hataları veya soruları discord sunucumuzda paylaşabilirsiz.

softBreak

Discord sunucusu: https://discord.gg/mHWKhjQNGx",2022-06-12 13:27,00:44:37,604,19,0,public,Enabled,3.15,
95,fY90focCynA,C#-Ders 1-Başlangıç (Introduction) 💻,"İnternet ortamında binlerce video, makale, anlatım vs... bulunmakta. Bu kadar materyal arasında da bu evrene yeni adım atmış olan veya halihazırda bu evrende bir şeyler üretmek isteyenler bazen çıkmaz yola girdiklerine inanabiliyorlar. Bu yüzden elimizden geldiğince tecrübelerimizi sizinle paylaşmak istiyoruz. Bu evrende ""tek"" olarak değil ""ekip"" olarak ilerlendiğinde başarının geleceğine inanıyoruz. 
softBreak Discord evreninde başladığımız canlı C# eğitim serisinin ilk videosunda C# programlama dilinin temel kavramlarının anlaşılması adına ""Windows form application"" uygulaması üzerinden aşağıdaki konuları işledik.


✅ değişkenler (variables), 
✅ veri tipleri (data types), 
✅ olaylar (events), 
✅ araçlar (tool box)

❓ yaşamış olduğunuz hataları veya soruları discord sunucumuzda paylaşabilirsiz.

softBreak

Discord sunucusu: https://discord.gg/mHWKhjQNGx",2022-06-09 23:13,00:50:20,2254,46,8,public,Enabled,2.40,
82,-1ZzjojwHEs,MsSQL Ders 1 - Başlangıç,"Bu dersimizde SQL ile karşınızdayız. Daha önce console uygulamasında C# dili ile bir RPG oyunu nasıl yazıldığını görmüştük. Yazmış olduğumuz uygulamada ya da sıfırdan yazmış olduğunuz başka bir uygulamalarda kodlarımız RAM olarak adlandırılan geçici bellek üzerinde tutulmaktadır. Bu yüzden kod içerisinde oluşturmuş olduğumuz veriler kalıcı değil, geçici olarak çalışmaktadırlar. Verilerimizin kaybolmaması ve anlamlı raporlar çıkarabilmek için SQL'e ihtiyaç duymaktayız. 

-----------------------------------------------------------------------------------------------------------------------------------------------------------

Discord sunucusu: https://discord.gg/tkZBnuba8h
web sitesi: https://softbreak.io
github: https://github.com/softbreak",2022-11-18 17:00,00:09:26,703,17,0,public,Enabled,2.42,
90,RceYpNMN1eU,C#-Ders 6-Metotlar (Functions) 💻,"Metotlar, C# programlama dilinde birden fazla yerde kullanacağımız kodları tek bir yapı altında toplayarak, bu yapıyı istediğimiz yerden çağırarak kullanabilmemizi sağlayan yapılardır. Özünde Matematik derslerinde bildiğimiz fonksiyon tanımlamanın kendisidir. 

Metotlar (functions) ikiye ayrılır. Bunlar,
✅ Geriye değer döndüren metotlar.
✅ Geriye değer döndürmeyen metotlar.

❓ yaşamış olduğunuz hataları veya soruları discord sunucumuzda paylaşabilirsiz.

softBreak

Discord sunucusu: https://discord.gg/mHWKhjQNGx",2022-07-09 17:33,00:43:18,534,19,0,public,Enabled,3.56,
